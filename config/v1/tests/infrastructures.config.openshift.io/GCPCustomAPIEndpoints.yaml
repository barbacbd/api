apiVersion: apiextensions.k8s.io/v1 # Hack because controller-gen complains if we don't have this
name: "Infrastructure"
crdName: infrastructures.config.openshift.io
featureGates:
- GCPCustomAPIEndpoints
tests:
  onCreate:
    - name: Should be able to create a minimal Infrastructure
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec: {} # No spec is required for a Infrastructure
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec: {}
  onUpdate:
    - name: Basic Service Endpoint
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
        status:
          controlPlaneTopology: HighlyAvailable
          cpuPartitioning: None
          infrastructureTopology: HighlyAvailable
          platform: GCP
          platformStatus:
            type: GCP
            gcp:
              cloudLoadBalancerConfig:
                dnsType: PlatformDefault
              serviceEndpoints:
                - {name: "Compute", url: "compute-myendpoint1.p.googleapis.com"}
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
        status:
          controlPlaneTopology: HighlyAvailable
          cpuPartitioning: None
          infrastructureTopology: HighlyAvailable
          platform: GCP
          platformStatus:
            type: GCP
            gcp:
              cloudLoadBalancerConfig:
                dnsType: PlatformDefault
              serviceEndpoints:
                - {name: "Compute", url: "compute-myendpoint1.p.googleapis.com"}
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
        status:
          controlPlaneTopology: HighlyAvailable
          cpuPartitioning: None
          infrastructureTopology: HighlyAvailable
          platform: GCP
          platformStatus:
            type: GCP
            gcp:
              cloudLoadBalancerConfig:
                dnsType: PlatformDefault
              serviceEndpoints:
                - {name: "Compute", url: "compute-myendpoint1.p.googleapis.com"}
    - name: Service Endpoint Same Name
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
        status:
          controlPlaneTopology: HighlyAvailable
          cpuPartitioning: None
          infrastructureTopology: HighlyAvailable
          platform: GCP
          platformStatus:
            type: GCP
            gcp:
              cloudLoadBalancerConfig:
                dnsType: PlatformDefault
              serviceEndpoints:
                - {name: "Compute", url: "compute-myendpoint1.p.googleapis.com"}
                - {name: "Compute", url: "compute-myendpoint2.p.googleapis.com"}
      expectedStatusError: "status.platformStatus.gcp.serviceEndpoints: Invalid value: \"array\": only 1 endpoint override is permitted per GCP service name"
    - name: Service Endpoint Empty URL
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
        status:
          controlPlaneTopology: HighlyAvailable
          cpuPartitioning: None
          infrastructureTopology: HighlyAvailable
          platform: GCP
          platformStatus:
            type: GCP
            gcp:
              cloudLoadBalancerConfig:
                dnsType: PlatformDefault
              serviceEndpoints:
                - {name: "Compute", url: ""}
      expectedStatusError: "status.platformStatus.gcp.serviceEndpoints[0].url: Invalid value: \"\": platformStatus.gcp.serviceEndpoints[0].url in body should be at least 1 chars long"
    - name: Service Endpoint URL Too Long
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
        status:
          controlPlaneTopology: HighlyAvailable
          cpuPartitioning: None
          infrastructureTopology: HighlyAvailable
          platform: GCP
          platformStatus:
            type: GCP
            gcp:
              cloudLoadBalancerConfig:
                dnsType: PlatformDefault
              serviceEndpoints:
                - {name: "Compute", url: "compute-myendpoint1-where-the-url-name-length-is-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-way-wayyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy-too-long.p.googleapis.com"}
      expectedStatusError: "[status.platformStatus.gcp.serviceEndpoints[0].url: Too long: may not be more than 253 bytes, <nil>: Invalid value: \"null\": some validation rules were not checked because the object was invalid; correct the existing errors to complete validation]"
    - name: Service Endpoint Bad Name
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
        status:
          controlPlaneTopology: HighlyAvailable
          cpuPartitioning: None
          infrastructureTopology: HighlyAvailable
          platform: GCP
          platformStatus:
            type: GCP
            gcp:
              cloudLoadBalancerConfig:
                dnsType: PlatformDefault
              serviceEndpoints:
                - {name: "UnknownService", url: "compute-myendpoint1.p.googleapis.com"}
      expectedStatusError: "[status.platformStatus.gcp.serviceEndpoints[0].name: Unsupported value: \"UnknownService\": supported values: \"Compute\", \"Container\", \"CloudResourceManager\", \"DNS\", \"File\", \"IAM\", \"ServiceUsage\", \"Storage\", \"TagManager\", <nil>: Invalid value: \"null\": some validation rules were not checked because the object was invalid; correct the existing errors to complete validation"
    - name: Service Endpoint End Slash
      initial: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
      updated: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
        status:
          controlPlaneTopology: HighlyAvailable
          cpuPartitioning: None
          infrastructureTopology: HighlyAvailable
          platform: GCP
          platformStatus:
            type: GCP
            gcp:
              cloudLoadBalancerConfig:
                dnsType: PlatformDefault
              serviceEndpoints:
                - {name: "Compute", url: "compute-myendpoint1.p.googleapis.com/"}
      expected: |
        apiVersion: config.openshift.io/v1
        kind: Infrastructure
        spec:
          platformSpec:
            type: GCP
            gcp: {}
        status:
          controlPlaneTopology: HighlyAvailable
          cpuPartitioning: None
          infrastructureTopology: HighlyAvailable
          platform: GCP
          platformStatus:
            type: GCP
            gcp:
              cloudLoadBalancerConfig:
                dnsType: PlatformDefault
              serviceEndpoints:
                - {name: "Compute", url: "compute-myendpoint1.p.googleapis.com/"}
#    - name: Service Endpoint Bad Path
#      initial: |
#        apiVersion: config.openshift.io/v1
#        kind: Infrastructure
#        spec:
#          platformSpec:
#            type: GCP
#            gcp: {}
#      updated: |
#        apiVersion: config.openshift.io/v1
#        kind: Infrastructure
#        spec:
#          platformSpec:
#            type: GCP
#            gcp: {}
#        status:
#          controlPlaneTopology: HighlyAvailable
#          cpuPartitioning: None
#          infrastructureTopology: HighlyAvailable
#          platform: GCP
#          platformStatus:
#            type: GCP
#            gcp:
#              cloudLoadBalancerConfig:
#                dnsType: PlatformDefault
#              serviceEndpoints:
#                - {name: "Compute", url: "compute-myendpoint1.p.googleapis.com/bad"}
#      expectedStatusError: "status.platformStatus.gcp.serviceEndpoints[0].url: Invalid value: \"string\": url must only be a domain. The url path must be empty."
#    - name: Service Endpoint Should Not Contain Scheme
#      initial: |
#        apiVersion: config.openshift.io/v1
#        kind: Infrastructure
#        spec:
#          platformSpec:
#            type: GCP
#            gcp: {}
#      updated: |
#        apiVersion: config.openshift.io/v1
#        kind: Infrastructure
#        spec:
#          platformSpec:
#            type: GCP
#            gcp: {}
#        status:
#          controlPlaneTopology: HighlyAvailable
#          cpuPartitioning: None
#          infrastructureTopology: HighlyAvailable
#          platform: GCP
#          platformStatus:
#            type: GCP
#            gcp:
#              cloudLoadBalancerConfig:
#                dnsType: PlatformDefault
#              serviceEndpoints:
#                - {name: "Compute", url: "https://compute-myendpoint1.p.googleapis.com"}
#      expectedStatusError: "status.platformStatus.gcp.serviceEndpoints[0].url: Invalid value: \"string\": url must only be a domain. The url path must be empty."
